// javascript
/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    
    let carry = 0;
    let dummyHead = new ListNode(11);
    let ptr = dummyHead;

    count = 0
    
    while(l1  && l2 ){
        ptr.next = new ListNode ( (l1.val + l2.val + carry) % 10 );
        ptr = ptr.next;
        carry = (l1.val + l2.val + carry) > 9 ? 1 : 0;
        l1 = l1.next;
        l2 = l2.next;
    }
    
    while(l1){
        ptr.next = new ListNode( (l1.val + carry) % 10 );
        ptr = ptr.next;
        carry = (l1.val + carry) > 9 ? 1 : 0 ;
        l1 = l1.next;      
    }
    
    while(l2){
        ptr.next = new ListNode ( (l2.val + carry) % 10 );
        ptr = ptr.next;
        carry = (l2.val + carry) > 9 ? 1 : 0;
        l2 = l2.next;          
    }
    //final carry check
    if (carry == 1)
        ptr.next = new ListNode(1)
    
    return dummyHead.next;
    
};
